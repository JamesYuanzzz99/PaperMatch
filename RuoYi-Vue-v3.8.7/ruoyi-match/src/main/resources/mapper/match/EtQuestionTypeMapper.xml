<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.match.mapper.EtQuestionTypeMapper">
    
    <resultMap type="EtQuestionType" id="EtQuestionTypeResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="grade"    column="grade"    />
        <result property="status"    column="status"    />
        <result property="field1"    column="field1"    />
        <result property="field2"    column="field2"    />
        <result property="field3"    column="field3"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remarks"    column="remarks"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectEtQuestionTypeVo">
        select id, name, grade, status, field1, field2, field3, create_by, create_time, update_by, update_time, remarks, del_flag from et_question_type
    </sql>

    <select id="selectEtQuestionTypeList" parameterType="EtQuestionType" resultMap="EtQuestionTypeResult">
        <include refid="selectEtQuestionTypeVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="remarks != null  and remarks != ''"> and remarks = #{remarks}</if>
        </where>
    </select>
    
    <select id="selectEtQuestionTypeById" parameterType="Long" resultMap="EtQuestionTypeResult">
        <include refid="selectEtQuestionTypeVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertEtQuestionType" parameterType="EtQuestionType" useGeneratedKeys="true" keyProperty="id">
        insert into et_question_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="grade != null">grade,</if>
            <if test="status != null">status,</if>
            <if test="field1 != null">field1,</if>
            <if test="field2 != null">field2,</if>
            <if test="field3 != null">field3,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remarks != null">remarks,</if>
            <if test="delFlag != null">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="grade != null">#{grade},</if>
            <if test="status != null">#{status},</if>
            <if test="field1 != null">#{field1},</if>
            <if test="field2 != null">#{field2},</if>
            <if test="field3 != null">#{field3},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remarks != null">#{remarks},</if>
            <if test="delFlag != null">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateEtQuestionType" parameterType="EtQuestionType">
        update et_question_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="grade != null">grade = #{grade},</if>
            <if test="status != null">status = #{status},</if>
            <if test="field1 != null">field1 = #{field1},</if>
            <if test="field2 != null">field2 = #{field2},</if>
            <if test="field3 != null">field3 = #{field3},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEtQuestionTypeById" parameterType="Long">
        delete from et_question_type where id = #{id}
    </delete>

    <delete id="deleteEtQuestionTypeByIds" parameterType="String">
        delete from et_question_type where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>